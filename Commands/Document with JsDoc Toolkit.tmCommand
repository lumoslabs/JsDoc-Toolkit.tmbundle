<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string># which files should we document?
files=""
eval arr=("$TM_SELECTED_FILES")
for (( i = 0; i &lt; ${#arr[@]}; i++ )); do
  files="$files ${arr[$i]}"
done
# if no selected files, use current file
if [[ -z $files ]]; then
  files="$TM_FILEPATH"
fi

# ELI STUFF HERE
# want to just use the entire source tree instead of selecting individual files
files="$TM_PROJECT_DIRECTORY"
# END ELI STUFF

# generate the docs
java -jar "$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/jsrun.jar" "$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/app/run.js" -c="$TM_BUNDLE_SUPPORT/bin/jsdoc.textmate.conf" -D="$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/" $files

# ELI STUFF HERE
# move the docs to a location in the project, but only do so if the export dir was defined
if [ -n "$JSDOC_EXPORT_DIR"  ]
then
    mkdir -p "$JSDOC_EXPORT_DIR"
    cp -rf "$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/out/jsdoc" "$JSDOC_EXPORT_DIR"
    echo "cp -rf \"$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/out/jsdoc\" \"$JSDOC_EXPORT_DIR\""
fi
# END ELI STUFF

# view the docs
#ELI: nope, don't want to view the docs, this hides output from JSDoc if there are issues
#echo "&lt;meta http-equiv='Refresh' content='0; tm-file:///$TM_BUNDLE_SUPPORT/bin/jsdoc-toolkit/out/jsdoc/index.html'&gt;"</string>
	<key>fallbackInput</key>
	<string>scope</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@j</string>
	<key>name</key>
	<string>Document with JsDoc Toolkit</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.js, -entity.name.tag.script.html</string>
	<key>uuid</key>
	<string>9C0C24BC-F178-4E8D-A1AA-1418A37B3C2F</string>
</dict>
</plist>
